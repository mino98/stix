/** * Copyright (c) 2006 * Martin Czuchra, Nicolas Peters, Daniel Polak, Willi Tscheschner * * Permission is hereby granted, free of charge, to any person obtaining a * copy of this software and associated documentation files (the "Software"), * to deal in the Software without restriction, including without limitation * the rights to use, copy, modify, merge, publish, distribute, sublicense, * and/or sell copies of the Software, and to permit persons to whom the * Software is furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER * DEALINGS IN THE SOFTWARE. **/if(!ORYX.Plugins)	ORYX.Plugins = new Object();ORYX.Plugins.WorkflowAttributes = {	/**	 *	Constructor	 *	@param {Object} Facade: The Facade of the Editor	 */	construct: function(facade) {		this.facade = facade;		this.facade.offer({			'name':"Define Workflow attributes",			'functionality': this.WorkflowAttributes.bind(this),			'group': "StencilSet",			'icon': ORYX.PATH + "images/add.png",			'description': "Define Workflow attributes.",			'index': 1,			'minShape': 0,			'maxShape': 0});	},		WorkflowAttributes: function() {			    var persistentColumn = new Ext.ux.grid.CheckColumn({	        header: 'Persistent?',	        dataIndex: 'persistent',	        width: 80	     });	    var cm = new Ext.grid.ColumnModel({	        defaults: {	            sortable: true	        },	        columns: [	            {	                id: 'name',	                header: 'Name',	                dataIndex: 'name',	                width: 220,	                editor: new Ext.form.TextField({	                    allowBlank: false	                })	            }, {	                header: 'Value',	                dataIndex: 'value',	                width: 130,	                editor: new Ext.form.TextField({	                    allowBlank: true	                })	            }, persistentColumn	        ]	    });	    	    var store = new Ext.data.JsonStore({	        autoDestroy: true,	        storeId: 'name',	        data: ORYX.workflowAttributes,	        autoLoad: true,	        fields: ['name', 'value', 'persistent']	    });	    	    // TODO: make sure duplicates and rows with empty 'name' are not allowed	    // TODO: allow removal of lines	    	    var grid = new Ext.grid.EditorGridPanel({	        store: store,	        cm: cm,	        width: 600,	        height: 350,	        autoExpandColumn: 'name',	        frame: true,	        plugins: [persistentColumn], 	        clicksToEdit: 1,	        tbar:[{	            text:'Add Attribute',	            tooltip:'Add a new workflow attribute',	            handler: function() {	        		var Rule = grid.getStore().recordType;		        	var p = new Rule({	                    name: '',	                    value: '',	                    persistent: false	                });		        	grid.stopEditing();		        	grid.getStore().insert(0, p);		        	grid.startEditing(0, 0);	            }	        }]	    });				var workflowAttributesWindows = new Ext.Window({			scope : this,			title : 'Define workflows attributes',			layout : 'fit',			modal : true,			hideBorders : true,			autoHeight: true,			plain : true,			items: grid,			buttons : [{						text : 'OK',						handler : function() {							// Delete the store contents...							ORYX.workflowAttributes = new Array();														// ...and fill it back in:							store.each(function () {								ORYX.workflowAttributes.push({									'name': this.data.name,									'value': this.data.value,									'persistent': this.data.persistent								});							});														// TODO: there may be a better way to handle this via extjs?							workflowAttributesWindows.hide();						}.bind(this)					}, {						text : 'Cancel',							handler : function() {							workflowAttributesWindows.hide();						}.bind(this)			}]		});		// Open the window:		workflowAttributesWindows.show();							}};ORYX.Plugins.WorkflowAttributes = Clazz.extend(ORYX.Plugins.WorkflowAttributes);