{
	"title":"NPMN",				
	"namespace":"http://www.wimo.inf.ed.ac.uk/stix#",
	"description":"This is the NPMN stencil set specification.",
 	"propertyPackages": [
 		{
 			"name":"baseAttributes",
 			"properties": [
 				{
					"id":"id",
					"type":"String",
					"title":"Id",
					"value":"",
					"description":"This attribute is used to uniquely identify NPMN elements.",
					"readonly":false,
					"optional":false,
					"length":"50"
				},
				{
					"id":"name",
					"type":"String",
					"title":"Name",
					"description":"The descriptive name of the NPMN element.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines" : true,
					"refToView":"text_name"	
				}
 			]
 		},
		{
			"name" : "bgColor",
			"properties" : [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				}
			]
		},
 		{
 			"name":"catchEventAttributes",
 			"properties":[
 				{
					"id":"eventdefinitionref",
					"type":"String",
					"title":"EventDefinitionRef",
					"value":"",
					"description":"EventDefinitionRefs (EventDefinition) is an attribute that defines the type of reusable triggers expected for a catch Event.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"eventdefinitions",
					"type":"String",
					"title":"EventDefinitions",
					"value":"",
					"description":"EventDefinitions (EventDefinition) is an attribute that defines the type of contained triggers expected for a catch Event.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"dataoutputassociations",
					"type":"String",
					"title":"DataOutputAssociations",
					"value":"",
					"description":"The Data Associations of the catch Event.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"dataoutput",
					"type":"String",
					"title":"DataOutput",
					"value":"",
					"description":"The Data Associations of the catch Event.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"outputset",
					"type":"String",
					"title":"OutputSet",
					"value":"",
					"description":"The OutputSet for the catch Event.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				}
 			]
 		},
 		{
 			"name":"throwEventAttributes",
 			"properties":[
 				{
					"id":"eventdefinitionref",
					"type":"String",
					"title":"EventDefinitionRef",
					"value":"",
					"description":"EventDefinitionRefs (EventDefinition) is an attribute that defines the type of reusable triggers expected for a catch Event.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"eventdefinitions",
					"type":"String",
					"title":"EventDefinitions",
					"value":"",
					"description":"EventDefinitions (EventDefinition) is an attribute that defines the type of contained triggers expected for a catch Event.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"datainputassociations",
					"type":"String",
					"title":"DataInputAssociations",
					"value":"",
					"description":"The Data Associations of the throw Event.",

					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"datainput",
					"type":"String",
					"title":"Data Input",
					"value":"",
					"description":"The Data Associations of the throw Event.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"inputset",
					"type":"String",
					"title":"InputSet",
					"value":"",
					"description":"The InputSet for the throw Event.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				}
 			]
 		},
		{
			"name" : "diagram",
			"properties" : [
				{
					"id":"pools",
					"type":"String",
					"title":"Pools",
					"value":"",
					"description":"An NPMN diagram shall contain one or more Pools.",
					"readonly":false,
					"optional":false,
					"length":"50",
					"wrapLines":true
				}
			]
		},
		{
			"name": "flowElement",
			"properties" : [
				{
					"id":"categories",
					"type":"String",
					"title":"Categories",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}
			]
		},
		{
			"name" : "itemAwareElement",
			"properties" : [
				{
					"id" : "itemSubjectRef",
					"type" : "String",
					"title" : "ItemSubjectRef",
					"description" : "Specification of the items that are stored or conveyed by the ItemAwareElement",
					"readonly" : false,
					"optional" : true,
					"length" : 50,
					"wrapLines" : true
				},
				{
					"id" : "dataState",
					"type" : "String",
					"title" : "DataState",
					"description" : "A reference to the DataState, which defines certain states for the data contained in the item.",
					"readonly" : false,
					"optional" : true,
					"length" : 50,
					"wrapLines" : true
				}
			]
		},
		

		{
			"name" : "activity",
			"properties": [
				{
					"id":"startquantity",
					"type":"Integer",
					"title":"StartQuantity",
					"value":1,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"min":"1"
				},
				{
					"id":"completionquantity",
					"type":"Integer",
					"title":"CompletionQuantity",
					"value":1,
					"description":"Defines the number of tokens that must be generated from the activity",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"min":"1"
				},
				{	
					"id":"status",
					"type":"Choice",
					"title":"Status",
					"value":"None",
					"description":"The Status of an activity is determined when the activity is being executed by a process engine.",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None"
						},
						{
							"id":"c2",
							"title":"Ready",
							"value":"Ready"
						},
						{
							"id":"c3",
							"title":"Active",
							"value":"Active"
						},
						{
							"id":"c4",
							"title":"Cancelled",
							"value":"Cancelled"
						},
						{
							"id":"c5",
							"title":"Aborting",
							"value":"Aborting"
						},
						{
							"id":"c6",
							"title":"Aborted",
							"value":"Aborted"
						},
						{
							"id":"c7",
							"title":"Completing",
							"value":"Completing"
						},
						{
							"id":"c8",
							"title":"Completed",
							"value":"Completed"
						}
					]
				},
				{
					"id":"performers",
					"type":"String",
					"title":"Performers",
					"value":"",
					"description":"The Performer attribute defines the resource that will perform or will be responsible for the activity.",
					"readonly": 	false,
					"optional": 	true,
					"length":"",
					"warpLines" : true
				},
				{
					"id":"properties",
					"type":"Complex",
					"title":"Properties",
					"value":"",
					"description":"Local Properties may be added to the activity. These Properties only apply within the processing of the activity.",
					"readonly": 	false,
					"optional": 	false,
					"complexItems": [
						{
							"id":"name",
							"name":"Name",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"type",
							"name":"Type",
							
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						},
						{
							"id":"value",
							"name":"Value",
							
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						},
						{
							"id":"correlation",
							"name":"Correlation",
							
							"type":"Boolean",
							"value":"false",
							"width":100,
							"optional":true
						}
					]
				},
				{
					"id":"inputsets",
					"type":"String",
					"title":"InputSets",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"inputs",
					"type":"String",
					"title":"Inputs",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"outputsets",
					"type":"String",
					"title":"OutputSets",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"outputs",
					"type":"String",
					"title":"Outputs",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"iorules",
					"type":"String",
					"title":"IORules",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"testtime",
					"type":"Choice",
					"title":"TestTime",
					"value":"After",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"Before",
							"value":"Before",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"After",
							"value":"After",
							"refToView":""
						}
					]
				},
				{
					"id":"mi_condition",
					"type":"String",
					"title":"MI Condition",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"mi_flowcondition",
					"type":"Choice",
					"title":"MI Flowcondition",
					"value":"All",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"One",
							"value":"One",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"All",
							"value":"All",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"Complex",
							"value":"Complex",
							"refToView":""
						}
					]
				},
				{
					"id":"isforcompensation",
					"type":"Boolean",
					"title":"Is for Compensation",
					"value":false,
					"description":"A flag that identifies whether this activity is intended for the purposes of compensation.",
					"readonly":false,
					"optional":true,
					"refToView":"compensation"
				},
				{
					"id":"assignments",
					"type":"Complex",
					"title":"Assignments",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"to",
							"name":"To",
							
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"from",
							"name":"From",
							
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						},
						{
							"id":"assigntime",
							"name":"AssignTime",
							
							"type":"Choice",
							"value":"Start",
							"width":100,
							"optional":true,
							"items": [
								{
									"id":"c1",
									"title":"Start",
									"value":"Start",
									"refToView":""
								},
								{
									"id":"c2",
									"title":"End",
									
									"value":"End",
									"refToView":""
								}
							]
						}
					]
				},
				{
					"id":"pool",
					"type":"String",
					"title":"Pool",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":""
				},
				{
					"id":"lanes",
					"type":"String",
					"title":"Lanes",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":""
				},
				{
					"id":"looptype",
					"type":"Choice",
					"title":"LoopType",
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"None",
							
							"value":"None",
							"refToView":"none"
						},
						{
							"id":"c2",
							"title":"Standard",
							
							"value":"Standard",
							"icon" : "activity/list/looptype.standard.png",
							"refToView":"loop"
						},
						{
							"id":"c3",
							"title":"MI Parallel",
							
							"value":"Parallel",
							"icon" : "activity/list/mi.parallel.png",
							"refToView":"parallel"
						},
						{
							"id":"c4",
							"title":"MI Sequential",
							
							"value":"Sequential",
							"icon" : "activity/list/mi.sequential.png",
							"refToView":"sequential"
						}	
					]
				},
				{
					"id":"loopcondition",
					"type":"String",
					"title":"LoopCondition",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"loopcounter",
					"type":"Integer",
					"title":"LoopCounter",
					"value":1,
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"min":"0"
				},
				{
					"id":"loopmaximum",
					"type":"Integer",
					"title":"LoopMaximum",
					
					"value":1,
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"min":"0"
				},
				{
					"id":"callacitivity",
					"type":"Boolean",
					"title":"is a Call Activity",
					"value":0,
					"description":"a Call Activity is a wrapper for a globally defined Sub-Process that is reused in the current process.",
					"readonly":false,
					"optional":"true",
					"refToView":"callActivity"
				}
			]
		},
		
		{
			"name" : "task",
			"properties" : [
				{
					"id":"activitytype",
					"type":"String",
					"title":"ActivityType",
					"value":"Task",
					"description":"The Type of Activity.",
					"description":"Typ der Aktivität",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"tasktype",
					"type":"Choice",
					"title":"TaskType",
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items":[
						{
							"id":"c1",
							"title":"None",
							"value":"None",
							"refToView":"none"
						},
						{
							"id":"c2",
							"title":"Send",
							"value":"Send",
							"icon" : "activity/list/type.send.png",
							"refToView":"sendTask"
						},
						{
							"id":"c3",
							"title":"Receive",
							"value":"Receive",
							"icon" : "activity/list/type.receive.png",
							"refToView":"receiveTask"
						},
						{
							"id":"c4",
							"title":"User",
							"value":"User",
							"icon" : "activity/list/type.user.png",
							"refToView":"userTask"
						},
						{
							"id":"c5",
							"title":"Manual",
							"value":"Manual",
							"icon" : "activity/list/type.manual.png",
							"refToView":"manualTask"	
						},
						{
							"id":"c6",
							"title":"Service",
							"value":"Service",
							"icon" : "activity/list/type.service.png",
							"refToView":"serviceTask"
						},
						{
							"id":"c7",
							"title":"Business Rule",
							"value":"Business Rule",
							"icon" : "activity/list/type.business.rule.png",
							"refToView":"businessRuleTask"
						},
						{
							"id":"c8",
							"title":"Script",
							"value":"Script",
							"icon" : "activity/list/type.script.png",
							"refToView":"scriptTask"
						}
					]
				},
				{
					"id":"inmessage",
					"type":"String",
					"title":"InMessage",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"outmessage",
					"type":"String",
					"title":"OutMessage",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"implementation",
					"type":"Choice",
					"title":"Implementation",
					"value":"Webservice",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"Webservice",
							"value":"Webservice",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"Other",
							"value":"Other",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"Unspecified",
							"value":"Unspecified",
							"refToView":""
						}
					]
				},
				{				
					"id":"complexmi_condition",
					"type":"String",
					"title":"Complex MI condition",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"messageref",
					"type":"String",
					"title":"MessageRef",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"operationref",
					"type":"String",
					"title":"OperationRef",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"taskref",
					"type":"String",
					"title":"TaskRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},	
				{
					"id":"instantiate",
					"type":"Boolean",
					"title":"Instantiate",
					
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				},
				
				{
					"id":"script",
					"type":"String",
					"title":"Script",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					
					"value":"#ffffcc",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"fill_el",
					"fill":true,
					"stroke":false
				}		
			]
		},
		{
			"name" : "gateway",
			"properties" : [
				{
					"id":"assignments",
					"type":"Complex",
					"title":"Assignments",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"to",
							"name":"To",
							
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"from",
							"name":"From",
							
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						},
						{
							"id":"assigntime",
							"name":"AssignTime",
							
							"type":"Choice",
							"value":"Start",
							"width":100,
							"optional":true,
							"items": [
								{
									"id":"c1",
									"title":"Start",
									
									"value":"Start",
									"refToView":""
								},
								{
									"id":"c2",
									"title":"End",
									
									"value":"End",
									"refToView":""
								}
							]
						}
					]
				},
				{
					"id":"pool",
					"type":"String",
					"title":"Pool",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":""
				},
				{
					"id":"gates",
					"type":"String",
					"title":"Gates",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"gates_outgoingsequenceflow",
					"type":"String",
					"title":"[Gates] OutgoingSequenceFlow",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"gates_assignments",
					"type":"String",
					"title":"[Gates] Assignments",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}
			]
		},
		{
			"name" : "pool",
			"properties" : [
				{
					"id" : "multiinstance",
					"type" : "Boolean",
					"title" : "is Multi Instance Participant",
					
					"value" : false,
					"description" : "",
					
					"readonly" : false,
					"optional" : true,
					"refToView" : "multiInstance"
				},
				{
					"id":"participantref",
					"type":"String",
					"title":"ParticipantRef",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"boundaryvisible",
					"type":"Boolean",
					"title":"BoundaryVisible",
					
					"value":true,
					"description":"Defines if the rectangular boundary for the Pool is visible.",
					
					"readonly":false,
					"optional":false,
					"refToView": ["border", "c", "caption", "captionDisableAntialiasing"],
					"visible":false
				},
				{
					"id":"mainpool",
					"type":"Boolean",
					"title":"is main pool",
					
					"value":false,
					"description":"Defines if the current Pool is the main Pool of the diagram.",
					
					"readonly":false,
					"optional":false
				},
				{
					"id":"processref",
					"type":"String",
					"title":"ProcessRef",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":"30"
				},
				{
					"id":"processname",
					"type":"String",
					"title":"ProcessName",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"processtype",
					"type":"Choice",
					"title":"ProcessType",
					
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":false,
					"popular" : true,
					"items": [
						{
							"id":"c1",
							"title":"None",
							
							"value":"None"
						},
						{
							"id":"c2",
							"title":"Private",
							
							"value":"Private"
						},
						{
							"id":"c3",
							"title":"Abstract",
							
							"value":"Abstract"
						},
						{
							"id":"c4",
							"title":"Collaboration",
							
							"value":"Collaboration"
						}
					]
				},
				{
					"id":"status",
					"type":"Choice",
					"title":"Status",
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":false,
					"popular" : true,
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None"
						},
						{
							"id":"c2",
							"title":"Ready",
							"value":"Ready"
						},
						{
							"id":"c3",
							"title":"Active",
							"value":"Active"
						},
						{
							"id":"c4",
							"title":"Cancelled",
							"value":"Cancelled"
						},
						{
							"id":"c5",
							"title":"Aborting",
							"value":"Aborting"
						},
						{
							"id":"c6",
							"title":"Aborted",
							"value":"Aborted"
						},
						{
							"id":"c7",
							"title":"Completing",
							"value":"Completing"
						},
						{
							"id":"c8",
							"title":"Completed",
							"value":"Completed"
						}
					]
				},
				{
					"id":"adhoc",
					"type":"Boolean",
					"title":"AdHoc",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false
				},
				{
					"id":"adhocordering",
					"type":"Choice",
					"title":"AdHocOrdering",
					
					"value":"Parallel",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"Sequential",
							"value":"Sequential",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"Parallel",
							"value":"Parallel",
							"refToView":""
						}
					]
				},
				{
					"id":"adhoccompletioncondition",
					"type":"String",
					"title":"AdHocCompletionCondition",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"suppressjoinfailure",
					"type":"Boolean",
					"title":"SuppressJoinFailure",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false
				},
				{
					"id":"enableinstancecompensation",
					"type":"Boolean",
					"title":"EnableBooleanCompensation",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false
				},
				{
					"id":"processcategories",
					"type":"String",
					"title":"ProcessCategories",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"processdocumentation",
					"type":"String",
					"title":"Process Documentation",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"",
					"wrapLines":true
				}
			]
		}
	],
	"stencils" : [
 		{
			"type":				"node",
			"id":				"NPMNDiagram",
			"title":			"NPMN-Diagram",
			"groups":			["Diagram"],
			"description":		"A NPMN Diagram.",
			"view":				"diagram.svg",
			"icon":				"diagram.png",
			"mayBeRoot":		true,
			"hide":				true,
			"propertyPackages" : ["baseAttributes","diagram"],
			"roles":			["canContainArtifacts"]
		},
		{
			"type" : 			"node",
			"id": 				"Task",
			"title" : 			"Task",
			"groups" : 			["Activities"],
			"description" : 	"A task is a unit of work - the job to be performed.",
			"view" : 			"activity/task.svg",
			"icon" : 			"activity/task.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"activity",
				"task"
			],
			"roles" : 			[
				"all",
				"sequence_start",
				"sequence_end",
				"from_task_event",
				"to_task_event",
				"FromEventbasedGateway",
				"messageflow_start",
				"messageflow_end",
				"fromtoall",
				"ActivitiesMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"Exclusive_Databased_Gateway",
			"title" :			"Exclusive Gateway",
			"description" :		"When splitting, it routes the sequence flow to exactly one of the outgoing branches based on conditions. When merging, it awaits one incoming branch to complete before triggering the outgoing flow.",
			"groups" : 			["Gateways"],
			"view" : 			"gateway/exclusive.databased.svg",
			"icon" : 			"gateway/exclusive.databased.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"gateway",
				"bgColor"
			],
			"properties" :		[
				{
					"id":"gatewaytype",
					"type":"String",
					"title":"Gateway type",
					"title":"Gateway-Typ",
					"value":"XOR",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"xortype",
					"type":"String",
					"title":"XOR type",
					
					"value":"Data",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"markervisible",
					"type":"Boolean",
					"title":"X-Marker visible",
					
					"value":"true",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"cross"
				},		
				{
					"id":"defaultgate",
					"type":"String",
					"title":"Default gate",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"gate_outgoingsequenceflow",
					"type":"String",
					"title":"[Gate] OutgoingSequenceFlow",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"gate_assignments",
					"type":"String",
					"title":"[Gate] Assignments",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}	
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"fromtoall",
				"GatewaysMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"ParallelGateway",
			"title" :			"Parallel Gateway",
			
			"groups" :			["Gateways"],
			"description" :		"When used to split the sequence flow, all outgoing branches are activated simultaneously. When merging parallel branches it waits for all incoming branches to complete before triggering the outgoing flow.",
			
			"view" :			"gateway/parallel.svg",
			"icon" :			"gateway/parallel.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"gateway",
				"bgColor"
			],
			"properties" : [
				{
					"id":"gatewaytype",
					"type":"String",
					"title":"GatewayType",
					
					"value":"AND",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				}
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"fromtoall",
				"GatewaysMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"InclusiveGateway",
			"title" :			"Inclusive Gateway",
			
			"groups" :			["Gateways"],
			"description" :		"When splitting, one or more branches are activated based on branching conditions. When merging, it awaits all active incoming branches to complete.",
			
			"view" :			"gateway/inclusive.svg",
			"icon" :			"gateway/inclusive.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"gateway",
				"bgColor"
			],
			"properties" :		[
				{
					"id":"gatewaytype",
					"type":"String",
					"title":"GatewayType",
					
					"value":"OR",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"defaultgate",
					"type":"String",
					"title":"DefaultGate",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"gate_outgoingsequenceflow",
					"type":"String",
					"title":"[Gate] OutgoingSequenceFlow",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"gate_assignments",
					"type":"String",
					"title":"[Gate] Assignments",
					"title":"[Gates] Zuweisungen",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"fromtoall",
				"GatewaysMorph"
			]
		},		
		{
			"type" : 			"node",
			"id" :				"Pool",
			"title" :			"Pool",
			"groups" :			["Other elements"],
			
			"description" :		"Pools represent responsibilities for activities in a process. A pool or a lane can be an organization, a role, or a system.",
			
			"view" :			"swimlane/pool.svg",
			"icon" :			"swimlane/pool.png",
			"propertyPackages": [
				"baseAttributes",
				"pool",
				"bgColor"
			],
			"roles" : 			[
				"all",
				"messageflow_start",
				"messageflow_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"canContainArtifacts"				
			],
			"layout" : [{"type" : "layout.bpmn2_0.pool"}]
		},
		
		//----------------------------------------------------
		
		
		{
			"type" : 			"node",
			"id" : 				"TextAnnotation",
			"title" :			"Text Annotation",
			
			"groups" :			["Other elements"],
			
			"description" :		"Any object can be associated with a Text Annotation to provide additional documentation.",
			
			"view" :			"artifact/text.annotation.svg",
			"icon" :			"artifact/text.annotation.png",
			"defaultAlign" :	"northeast",
			"propertyPackages": [
				"baseAttributes",
				"flowElement",
				"artifact"
			],
			"properties" : 		[
				{
					"id":"text",
					"type":"String",
					"title":"Text",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"text",
					"length":"",
					"wrapLines":true
				},
				{
					"id":"artifacttype",
					"type":"String",
					"title":"ArtifactType",
					
					"value":"Annotation",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				}
			],
			"roles": [
				"all",
				"from_artifact",
				"to_artifact",
				"TextAnnotationMorph"
			]
		},
		{
			"type" :		 	"node",
			"id" :				"StartMessageEvent",
			"title" : 			"Start Message Event",
			
			"groups" :			["Start Events"],
			
			"description" :		"A process instance is started on receive of a message.",
			
			"view" :			"startevent/message.svg",
			"icon" :			"startevent/message.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"bgColor"
			],
			"roles": [
				"all",
				"messageflow_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"sequence_start",
				"Startevents_all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					
					"value":"Message",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},
		{
			"type" :			"node",
			"id" :				"StartTimerEvent",
			"title" :			"Start Timer Event",
			
			"groups" :			["Start Events"],
			
			"description" :		"A process instance is started on cyclic timer events, points in time, after time spans or timeouts.",
			
			"view" :			"startevent/timer.svg",
			"icon" :			"startevent/timer.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"bgColor"
			],
			"roles" : 			[
				"all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Startevents_all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					
					"value":"Timer",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},
		{
			"type" : 			"node",
			"id" :				"StartConditionalEvent",
			"title" :			"Start Conditional Event",
			
			"groups" :			["Start Events"],
			
			"description" :		"A process instance is started based on changed business conditions or matching business rules.",
			
			"view" :			"startevent/conditional.svg",
			"icon" 	:			"startevent/conditional.png",
			"propertyPackages": [
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"bgColor"
			],
			"roles" : 			[
				"all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Startevents_all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					
					"value":"Conditional",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateMessageEventCatching",
			"title":"Message Catching Event",
			
			"groups":["Intermediate events"],
			
			"description":"This event reacts on the arrival of a message.",
			
			"view":"intermediateevent/message.catching.svg",
			"icon":"catching/message.png",
			"propertyPackages":[
				"baseAttributes",
				"interrupting",
				"bgColor"
			],
			"roles":[
				"all",
				"messageflow_end",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"FromEventbasedGateway",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					
					"value":"Message",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"TimeoutEvent",
			"title":"Timeout Event",
			
			"groups":["Error handling events"],
			
			"description":"Process execution is delayed until a certain point in time is reached or a particular duration is over.",
			
			"view":"intermediateevent/timer.svg",
			"icon":"catching/timer.png",
			"propertyPackages":[
				"baseAttributes",
				"interrupting",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"FromEventbasedGateway",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					
					"value":"Timer",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"ErrorEvent",
			"title":"Error Event",
			
			"groups":["Error handling events"],
			
			"description":"Catches a named error, which was thrown be an inner scope (e.g. subprocess). This event needs to be attached to the boundary of an activity.",
			
			"view":"intermediateevent/error.svg",
			"icon":"catching/error.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					
					"value":"Error",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateMessageEventThrowing",
			"title":"Message Throwing Event",
			
			"groups":["Intermediate events"],
			
			"description":"The throwing message event sends a message to a communication partner and afterwards continues process execution.",
			
			"view":"intermediateevent/message.throwing.svg",
			"icon":"throwing/message.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles":[
				"all",
				"messageflow_start",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					
					"value":"Message",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateLogEvent",
			"title":"Log Event",
			
			"groups":["Intermediate events"],
			
			"description":"The log event writes a message to the STIX log overlay.",
			
			"view":"intermediateevent/log.svg",
			"icon":"throwing/log.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles":[
				"all",
				"messageflow_start",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					
					"value":"Message",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},
		{
			"type" : "node",
			"id": "EndNoneEvent",
			"title": "End Event",
			
			"groups" : ["End Events"],
			
			"description" : "The untyped end event typically marks the standard end of a process.",
			
			"view" : "endevent/none.svg",
			"icon" : "endevent/none.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles" : [
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Endevents_all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					
					"value":"None",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},
		{
			"type": "node",
			"id":"EndTerminateEvent",
			"title":"Terminate End Event",
			
			"groups":["End Events"],
			
			"description":"Triggering the immediate termination of a process instance. All steps still in execution in parallel branches are terminated.",
			
			"view":"endevent/terminate.svg",
			"icon":"endevent/terminate.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles": [
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					
					"value":"Terminate",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},
		{
			"type": "edge",
			"id":"SequenceFlow",
			"title":"Sequence Flow",
			
			"description":"Sequence Flow defines the execution order of activities.",
			
			"groups":["Other elements"],
			
			"view":"connector/sequenceflow.svg",
			"icon":"connector/sequenceflow.png",
			"propertyPackages":[
				"baseAttributes"
			],
			"roles": [
				"all",
				"ConnectingObjectsMorph"
			],
			"properties":[
				{
					"id":"ConditionType",
					"type":"Choice",
					"title":"ConditionType",
					
					"value":"None",
					"description":"Determine the typ of the flow object.",
					
					"readonly":false,
					"optional":false,
					"items": [
						{
							"id":"none",
							"title":"Standard",
							
							"value":"None"
						},
						{
							"id":"expression",
							"title":"Conditional Flow",
							
							"value":"Expression",
							"icon" : "connector/list/type.expression.png",
							"refToView":""
						},
						{
							"id":"default",
							"title":"Default Flow",
							
							"value":"Default",
							"icon" : "connector/list/type.default.png",
							"refToView":"default"
						}
					]
				},
				{
					"id":"conditionexpression",
					"type":"String",
					"title":"Condition Expression",
					
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":"",
					"refToView":"condition",
					"wrapLines":true
				},
				{
					"id":"showdiamondmarker",
					"type":"Boolean",
					"title":"is conditional flow",
					
					"value":false,
					"description":"System intern variable to set the Diamond invisible, if sourceShape is a gateway and ConditionType is set to Expression",
					"readonly":true,
					"optional":false,
					"visible":false,
					"refToView":"conditional"
				}
			]
		}
	],
	"rules" : {
		"cardinalityRules": [
			{
				"role":"Startevents_all",
				"maximumOccurrence": undefined,
				"incomingEdges": [
					{
						"role":"SequenceFlow",
						"maximum":0
						
					}
				]
			},
			{
				"role":"Endevents_all",
				"maximumOccurrence":undefined,
				"outgoingEdges": [
					{
						"role":"SequenceFlow",
						"maximum":0
						
					}
				]
			}
		],
		"connectionRules": [
			{
				"role":"SequenceFlow",
				"connects": [
					{
						"from":"sequence_start",
						"to":["sequence_end"]
					},
					{
						"from":"Exclusive_Eventbased_Gateway",
						"to":["FromEventbasedGateway"]
					},{
						"from" : "EventbasedGateway",
						"to" : ["FromEventbasedGateway"]
					}
				]
			},
			{
				"role":"MessageFlow",
				"connects": [
					{
						"from":"messageflow_start",
						"to":["messageflow_end"]
					}
				]
			},
			{
				"role":"IntermediateEventOnActivityBoundary",
				"connects": [
					{
						"from":"Task",
						"to":["IntermediateEventOnActivityBoundary"]
					}
				]
			},
			{
				"role":"IntermediateEventOnSubprocessBoundary",
				"connects": [
					{
						"from":"CollapsedSubprocess",
						"to":["IntermediateEventOnSubprocessBoundary"]
					},
					{
						"from":"Subprocess",
						"to":["IntermediateEventOnSubprocessBoundary"]
					}
				]
			},
			{
				"role" : "Association_Unidirectional",
				"connects" : [
					{
						"from" : "from_task_event",
						"to" : ["DataObject"]
					},
					{
						"from" : "from_task_event",
						"to" : ["DataStore"]
					},
					{
						"from" : "from_task_event",
						"to" : ["ITSystem"]
					},
					{
						"from" : "DataObject",
						"to" : ["to_task_event"]
					},
					{
						"from" : "DataStore",
						"to" : ["to_task_event"]
					},
					{
						"from" : "ITSystem",
						"to" : ["to_task_event"]
					},
					{
						"from" : "IntermediateCompensationEventCatching",
						"to" : ["to_task_event"]
					}
				]
			},
			{
				"role" : "Association_Undirected",
				"connects" : [
					{
						"from" : "SequenceFlow",
						"to" : ["DataObject"]
					},
					{
						"from" : "DataObject",
						"to" : ["SequenceFlow"]
					},
					{
						"from" : "fromtoall",
						"to" : ["TextAnnotation"]
					},
					{
						"from" : "TextAnnotation",
						"to" : "fromtoall"
					},
					{
						"from" : "Message",
						"to" : ["MessageFlow"]
					},
					{
						"from" : "MessageFlow",
						"to" : ["Message"]
					}
				]
			}
		],
		"containmentRules" : [
			{
				"role" : "NPMNDiagram",
				"contains" : ["Pool"]
			},
			{
				"role" : "EventSubprocess",
				"contains" : [
					"eventSubprocessElement",
					"sequence_start",
					"sequence_end"
				]
			},
			{
				"role" : "Pool",
				"contains" : [
					"sequence_start",
					"sequence_end",
					"DataObjectMorph"
				]
			},
			{
				"role" : "MessageContainer",
				"contains" : ["Message"]
			}
		],
		"morphingRules": [
			{
				"role": "ActivitiesMorph",
				"baseMorphs": ["Task"],
				"preserveBounds" : true
			},
			{
				"role": "EventActivitiesMorph",
				"baseMorphs": ["CollapsedEventSubprocess"]
			},
			{
				"role": "GatewaysMorph",
				"baseMorphs": ["Exclusive_Databased_Gateway"]
			},
			{
				"role": "StartEventsMorph",
				"baseMorphs": ["StartNoneEvent"],
				"showInShapeMenu":false
			},
			{
				"role": "IntermediateEventsMorph",
				"baseMorphs": ["IntermediateEvent"]
			},
			{
				"role": "EndEventsMorph",
				"baseMorphs": ["EndNoneEvent"]
			},
			{
				"role": "TextAnnotationMorph",
				"baseMorphs": ["TextAnnotation"]
			},
			{
				"role": "DataObjectMorph",
				"baseMorphs": ["DataObject"]
			},
			{
				"role": "ConnectingObjectsMorph",
				"baseMorphs": ["SequenceFlow"]
			}
		],
		"layoutRules" : [
			{
				"role": "ActivitiesMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			},
			{
				"role": "EventActivitiesMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			},
			{
				"role": "GatewaysMorph",
				"outs": [{"t":2, "r":1, "b":2, "l":1}]
			},
			{
				"role": "StartEventsMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			},
			{
				"role": "IntermediateEventsMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			},
			{
				"role": "EndEventsMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			}
		]
	}
}